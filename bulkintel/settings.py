"""
Django settings for bulkintel project.

Generated by 'django-admin startproject' using Django 5.0.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from pathlib import Path
import os
import dj_database_url

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ.get('SECRET_KEY', "wsq7xUpGo2MwLABWUqHbUlQ2nPu2rONLgx43eIZjTrYEINSECURE")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

ALLOWED_HOSTS = [host.strip() for host in os.environ.get('ALLOWED_HOSTS', 'localhost,127.0.0.1').split(',')]

CSRF_TRUSTED_ORIGINS = [origin.strip() for origin in os.environ.get('CSRF_TRUSTED_ORIGINS', 'https://localhost,https://127.0.0.1').split(',')]

CSRF_COOKIE_SECURE = True
CSRF_COOKIE_HTTPONLY = True
CSRF_USE_SESSIONS = True
SESSION_COOKIE_SECURE = True
SESSION_COOKIE_AGE = 28800 # 8 hours in seconds

# Application definition
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'sslserver',
    "django_extensions",
    'app',  
    'auth_app',
    'axes',
    'analytics',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'app.login_required.LoginRequiredMiddleware',  # Include the class name here
    'axes.middleware.AxesMiddleware',
]


AUTHENTICATION_BACKENDS = [
    'axes.backends.AxesBackend',
    'django.contrib.auth.backends.ModelBackend',
]

AXES_FAILURE_LIMIT = 5
AXES_COOLOFF_TIME = 1  # Cool off period in hours
AXES_RESET_ON_SUCCESS = True
AXES_ONLY_USER_FAILURES = False  # If True, only block user accounts, not IPs
AXES_LOCK_OUT_BY_COMBINATION_USER_AND_IP = True  # If True, block by both user and IP
AXES_USE_USER_AGENT = False
AXES_LOCKOUT_TEMPLATE = 'auth_app/lockout.html'  # Optional: Template to render on lockout
AXES_LOCKOUT_URL = '/account_locked/'
AXES_SENSITIVE_PARAMETERS = ["password"]
SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')
USE_X_FORWARDED_HOST = True

# There are two proxies: the TLS nginx pod + the in‑container nginx
AXES_IPWARE_PROXY_COUNT = 1

AXES_IPWARE_META_PRECEDENCE_ORDER = [
    "HTTP_X_FORWARDED_FOR",
    "REMOTE_ADDR",
]

ROOT_URLCONF = 'bulkintel.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'bulkintel.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DATABASES = {
    "default": dj_database_url.config(
        default=os.getenv("DATABASE_URL", "postgres://user:pass@host:5432/dbname"),
        conn_max_age=600,          # keeps connections open
        conn_health_checks=True,   # drops dead ones
    )
}

# pull super-user defaults from the environment so you don’t hard-code secrets
INIT_SUPERUSER_USERNAME  = os.getenv("DJANGO_SU_NAME",  "admin")
INIT_SUPERUSER_EMAIL     = os.getenv("DJANGO_SU_EMAIL", "admin@example.com")
INIT_SUPERUSER_PASSWORD  = os.getenv("DJANGO_SU_PASS",  "change-me")

# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
    {
        'NAME': 'auth_app.validators.CustomPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

LOGOUT_REDIRECT_URL = '/login'
LOGIN_REDIRECT_URL = "/"

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
        },
    },
    'root': {
        'handlers': ['console'],
        'level': 'DEBUG',
    },
    'django': {
        'handlers': ['console'],
        'level': 'DEBUG',
        'propagate': True,
    },
}

# Caching configuration
REDIS_BACKEND = 'django_redis.cache.RedisCache'
REDIS_BACKEND_CLASS = 'django_redis.client.DefaultClient'
REDIS_USER = os.environ.get('REDIS_USER', 'default')
REDIS_PASSWORD = os.environ.get('REDIS_PASSWORD', 'password')
REDIS_HOST = os.environ.get('REDIS_HOST', 'redis-service')
REDIS_PORT = os.environ.get('REDIS_PORT', '6379')
REDIS_LOCATION = f"redis://{REDIS_USER}:{REDIS_PASSWORD}@{REDIS_HOST}:{REDIS_PORT}/1"
CACHES = {
    'default': {
        'BACKEND': REDIS_BACKEND,
        'LOCATION': REDIS_LOCATION,
        'OPTIONS': {
            'CLIENT_CLASS': REDIS_BACKEND_CLASS,
        }
    },
    'abuseipdb': {
        'BACKEND': REDIS_BACKEND,
        'LOCATION': REDIS_LOCATION,
        'OPTIONS': {
            'CLIENT_CLASS': REDIS_BACKEND_CLASS,
        },
        'KEY_PREFIX': 'abuseipdb',
        'TIMEOUT': 300,
    },
    'virustotal': {
        'BACKEND': REDIS_BACKEND,
        'LOCATION': REDIS_LOCATION,
        'OPTIONS': {
            'CLIENT_CLASS': REDIS_BACKEND_CLASS,
        },
        'KEY_PREFIX': 'virustotal',
        'TIMEOUT': 300,
    },
    'bigdata': {
        'BACKEND': REDIS_BACKEND,
        'LOCATION': REDIS_LOCATION,
        'OPTIONS': {
            'CLIENT_CLASS': REDIS_BACKEND_CLASS,
        },
        'KEY_PREFIX': 'bigdata',
        'TIMEOUT': 300,
    }
}

SESSION_ENGINE = 'django.contrib.sessions.backends.cache'
SESSION_CACHE_ALIAS = 'default'
